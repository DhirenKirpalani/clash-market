"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/games/page",{

/***/ "(app-pages-browser)/./lib/tournaments.ts":
/*!****************************!*\
  !*** ./lib/tournaments.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTournament: function() { return /* binding */ createTournament; },\n/* harmony export */   deleteTournament: function() { return /* binding */ deleteTournament; },\n/* harmony export */   getTournament: function() { return /* binding */ getTournament; },\n/* harmony export */   getTournamentParticipants: function() { return /* binding */ getTournamentParticipants; },\n/* harmony export */   getTournaments: function() { return /* binding */ getTournaments; },\n/* harmony export */   isUserRegistered: function() { return /* binding */ isUserRegistered; },\n/* harmony export */   registerForTournament: function() { return /* binding */ registerForTournament; },\n/* harmony export */   updateParticipantStatus: function() { return /* binding */ updateParticipantStatus; },\n/* harmony export */   updateTournamentStatus: function() { return /* binding */ updateTournamentStatus; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n\n// Get all tournaments\nasync function getTournaments() {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").select(\"*\").order(\"start_date\", {\n        ascending: true\n    });\n    if (error) throw error;\n    return data || [];\n}\n// Get a specific tournament\nasync function getTournament(tournamentId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").select(\"*\").eq(\"id\", tournamentId).single();\n    if (error) throw error;\n    return data;\n}\n// Register user for tournament\nasync function registerForTournament(tournamentId, userId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").insert({\n        tournament_id: tournamentId,\n        user_id: userId,\n        status: \"registered\"\n    }).select();\n    if (error) throw error;\n    return data;\n}\n// Get tournament participants\nasync function getTournamentParticipants(tournamentId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").select(\"\\n      id,\\n      status,\\n      registration_date,\\n      users (\\n        id,\\n        wallet_address,\\n        username,\\n        avatar_url\\n      )\\n    \").eq(\"tournament_id\", tournamentId);\n    if (error) throw error;\n    return data || [];\n}\n// Check if user is registered for tournament\nasync function isUserRegistered(tournamentId, userId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").select(\"id\").eq(\"tournament_id\", tournamentId).eq(\"user_id\", userId).single();\n    if (error && error.code !== \"PGRST116\") {\n        throw error;\n    }\n    return !!data;\n}\n// Create a tournament (admin only)\nasync function createTournament(tournamentData) {\n    // Get the wallet address from localStorage\n    const wallet =  true ? localStorage.getItem(\"walletAddress\") : 0;\n    // Use the admin API route to bypass RLS\n    const response = await fetch(\"/api/admin/tournaments\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            tournamentData,\n            wallet\n        })\n    });\n    const result = await response.json();\n    if (!response.ok) {\n        throw new Error(result.error || \"Failed to create tournament\");\n    }\n    return result.data;\n}\n// Delete tournament (admin only)\nasync function deleteTournament(tournamentId) {\n    // Get the wallet address from localStorage\n    const wallet =  true ? localStorage.getItem(\"walletAddress\") : 0;\n    // Use the admin API route to bypass RLS\n    const response = await fetch(\"/api/admin/tournaments\", {\n        method: \"DELETE\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            tournamentId,\n            wallet\n        })\n    });\n    const result = await response.json();\n    if (!response.ok) {\n        throw new Error(result.error || \"Failed to delete tournament\");\n    }\n    return result.data;\n}\n// Update tournament status or properties (admin only)\nasync function updateTournamentStatus(tournamentId, updates) {\n    // Get the wallet address from localStorage\n    const wallet =  true ? localStorage.getItem(\"walletAddress\") : 0;\n    // Use the admin API route to bypass RLS\n    const response = await fetch(\"/api/admin/tournaments\", {\n        method: \"PATCH\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            tournamentId,\n            updates,\n            wallet\n        })\n    });\n    const result = await response.json();\n    if (!response.ok) {\n        throw new Error(result.error || \"Failed to update tournament\");\n    }\n    return result.data;\n}\n// Update participant status (admin only)\nasync function updateParticipantStatus(participantId, status) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").update({\n        status\n    }).eq(\"id\", participantId).select();\n    if (error) throw error;\n    return data;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/tournaments.ts\n"));

/***/ })

});