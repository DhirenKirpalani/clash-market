"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/tournaments/page",{

/***/ "(app-pages-browser)/./lib/tournaments.ts":
/*!****************************!*\
  !*** ./lib/tournaments.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTournament: function() { return /* binding */ createTournament; },\n/* harmony export */   getTournament: function() { return /* binding */ getTournament; },\n/* harmony export */   getTournamentParticipants: function() { return /* binding */ getTournamentParticipants; },\n/* harmony export */   getTournaments: function() { return /* binding */ getTournaments; },\n/* harmony export */   isUserRegistered: function() { return /* binding */ isUserRegistered; },\n/* harmony export */   registerForTournament: function() { return /* binding */ registerForTournament; },\n/* harmony export */   updateParticipantStatus: function() { return /* binding */ updateParticipantStatus; },\n/* harmony export */   updateTournamentStatus: function() { return /* binding */ updateTournamentStatus; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n\n// Get all tournaments\nasync function getTournaments() {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").select(\"*\").order(\"start_date\", {\n        ascending: true\n    });\n    if (error) throw error;\n    return data || [];\n}\n// Get a specific tournament\nasync function getTournament(tournamentId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").select(\"*\").eq(\"id\", tournamentId).single();\n    if (error) throw error;\n    return data;\n}\n// Register user for tournament\nasync function registerForTournament(tournamentId, userId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").insert({\n        tournament_id: tournamentId,\n        user_id: userId,\n        status: \"registered\"\n    }).select();\n    if (error) throw error;\n    return data;\n}\n// Get tournament participants\nasync function getTournamentParticipants(tournamentId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").select(\"\\n      id,\\n      status,\\n      registration_date,\\n      users (\\n        id,\\n        wallet_address,\\n        username,\\n        avatar_url\\n      )\\n    \").eq(\"tournament_id\", tournamentId);\n    if (error) throw error;\n    return data || [];\n}\n// Check if user is registered for tournament\nasync function isUserRegistered(tournamentId, userId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").select(\"id\").eq(\"tournament_id\", tournamentId).eq(\"user_id\", userId).single();\n    if (error && error.code !== \"PGRST116\") {\n        throw error;\n    }\n    return !!data;\n}\n// Create a tournament (admin only)\nasync function createTournament(tournamentData) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").insert(tournamentData).select();\n    if (error) throw error;\n    return data;\n}\n// Update tournament status or properties (admin only)\nasync function updateTournamentStatus(tournamentId, updates) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").update(updates).eq(\"id\", tournamentId).select();\n    if (error) throw error;\n    return data;\n}\n// Update participant status (admin only)\nasync function updateParticipantStatus(participantId, status) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").update({\n        status\n    }).eq(\"id\", participantId).select();\n    if (error) throw error;\n    return data;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi90b3VybmFtZW50cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBc0M7QUFFdEMsc0JBQXNCO0FBQ2YsZUFBZUM7SUFDcEIsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGVBQ0xDLE1BQU0sQ0FBQyxLQUNQQyxLQUFLLENBQUMsY0FBYztRQUFFQyxXQUFXO0lBQUs7SUFFekMsSUFBSUosT0FBTyxNQUFNQTtJQUNqQixPQUFPRCxRQUFRLEVBQUU7QUFDbkI7QUFFQSw0QkFBNEI7QUFDckIsZUFBZU0sY0FBY0MsWUFBb0I7SUFDdEQsTUFBTSxFQUFFUCxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGVBQ0xDLE1BQU0sQ0FBQyxLQUNQSyxFQUFFLENBQUMsTUFBTUQsY0FDVEUsTUFBTTtJQUVULElBQUlSLE9BQU8sTUFBTUE7SUFDakIsT0FBT0Q7QUFDVDtBQUVBLCtCQUErQjtBQUN4QixlQUFlVSxzQkFBc0JILFlBQW9CLEVBQUVJLE1BQWM7SUFDOUUsTUFBTSxFQUFFWCxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGdCQUNMVSxNQUFNLENBQUM7UUFDTkMsZUFBZU47UUFDZk8sU0FBU0g7UUFDVEksUUFBUTtJQUNWLEdBQ0NaLE1BQU07SUFFVCxJQUFJRixPQUFPLE1BQU1BO0lBQ2pCLE9BQU9EO0FBQ1Q7QUFFQSw4QkFBOEI7QUFDdkIsZUFBZWdCLDBCQUEwQlQsWUFBb0I7SUFDbEUsTUFBTSxFQUFFUCxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGdCQUNMQyxNQUFNLENBQUUsbUtBV1JLLEVBQUUsQ0FBQyxpQkFBaUJEO0lBRXZCLElBQUlOLE9BQU8sTUFBTUE7SUFDakIsT0FBT0QsUUFBUSxFQUFFO0FBQ25CO0FBRUEsNkNBQTZDO0FBQ3RDLGVBQWVpQixpQkFBaUJWLFlBQW9CLEVBQUVJLE1BQWM7SUFDekUsTUFBTSxFQUFFWCxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGdCQUNMQyxNQUFNLENBQUMsTUFDUEssRUFBRSxDQUFDLGlCQUFpQkQsY0FDcEJDLEVBQUUsQ0FBQyxXQUFXRyxRQUNkRixNQUFNO0lBRVQsSUFBSVIsU0FBU0EsTUFBTWlCLElBQUksS0FBSyxZQUFZO1FBQ3RDLE1BQU1qQjtJQUNSO0lBRUEsT0FBTyxDQUFDLENBQUNEO0FBQ1g7QUFFQSxtQ0FBbUM7QUFDNUIsZUFBZW1CLGlCQUFpQkMsY0FVdEM7SUFDQyxNQUFNLEVBQUVwQixJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGVBQ0xVLE1BQU0sQ0FBQ1EsZ0JBQ1BqQixNQUFNO0lBRVQsSUFBSUYsT0FBTyxNQUFNQTtJQUNqQixPQUFPRDtBQUNUO0FBRUEsc0RBQXNEO0FBQy9DLGVBQWVxQix1QkFBdUJkLFlBQW9CLEVBQUVlLE9BT2xFO0lBQ0MsTUFBTSxFQUFFdEIsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNSCwrQ0FBUUEsQ0FDbkNJLElBQUksQ0FBQyxlQUNMcUIsTUFBTSxDQUFDRCxTQUNQZCxFQUFFLENBQUMsTUFBTUQsY0FDVEosTUFBTTtJQUVULElBQUlGLE9BQU8sTUFBTUE7SUFDakIsT0FBT0Q7QUFDVDtBQUVBLHlDQUF5QztBQUNsQyxlQUFld0Isd0JBQ3BCQyxhQUFxQixFQUNyQlYsTUFBeUQ7SUFFekQsTUFBTSxFQUFFZixJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGdCQUNMcUIsTUFBTSxDQUFDO1FBQUVSO0lBQU8sR0FDaEJQLEVBQUUsQ0FBQyxNQUFNaUIsZUFDVHRCLE1BQU07SUFFVCxJQUFJRixPQUFPLE1BQU1BO0lBQ2pCLE9BQU9EO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL3RvdXJuYW1lbnRzLnRzP2RkYTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICcuL3N1cGFiYXNlJztcblxuLy8gR2V0IGFsbCB0b3VybmFtZW50c1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRvdXJuYW1lbnRzKCkge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCd0b3VybmFtZW50cycpXG4gICAgLnNlbGVjdCgnKicpXG4gICAgLm9yZGVyKCdzdGFydF9kYXRlJywgeyBhc2NlbmRpbmc6IHRydWUgfSk7XG4gICAgXG4gIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG4gIHJldHVybiBkYXRhIHx8IFtdO1xufVxuXG4vLyBHZXQgYSBzcGVjaWZpYyB0b3VybmFtZW50XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VG91cm5hbWVudCh0b3VybmFtZW50SWQ6IHN0cmluZykge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCd0b3VybmFtZW50cycpXG4gICAgLnNlbGVjdCgnKicpXG4gICAgLmVxKCdpZCcsIHRvdXJuYW1lbnRJZClcbiAgICAuc2luZ2xlKCk7XG4gICAgXG4gIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG4gIHJldHVybiBkYXRhO1xufVxuXG4vLyBSZWdpc3RlciB1c2VyIGZvciB0b3VybmFtZW50XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcmVnaXN0ZXJGb3JUb3VybmFtZW50KHRvdXJuYW1lbnRJZDogc3RyaW5nLCB1c2VySWQ6IHN0cmluZykge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdwYXJ0aWNpcGFudHMnKVxuICAgIC5pbnNlcnQoe1xuICAgICAgdG91cm5hbWVudF9pZDogdG91cm5hbWVudElkLFxuICAgICAgdXNlcl9pZDogdXNlcklkLFxuICAgICAgc3RhdHVzOiAncmVnaXN0ZXJlZCdcbiAgICB9KVxuICAgIC5zZWxlY3QoKTtcbiAgICBcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8vIEdldCB0b3VybmFtZW50IHBhcnRpY2lwYW50c1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRvdXJuYW1lbnRQYXJ0aWNpcGFudHModG91cm5hbWVudElkOiBzdHJpbmcpIHtcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAuZnJvbSgncGFydGljaXBhbnRzJylcbiAgICAuc2VsZWN0KGBcbiAgICAgIGlkLFxuICAgICAgc3RhdHVzLFxuICAgICAgcmVnaXN0cmF0aW9uX2RhdGUsXG4gICAgICB1c2VycyAoXG4gICAgICAgIGlkLFxuICAgICAgICB3YWxsZXRfYWRkcmVzcyxcbiAgICAgICAgdXNlcm5hbWUsXG4gICAgICAgIGF2YXRhcl91cmxcbiAgICAgIClcbiAgICBgKVxuICAgIC5lcSgndG91cm5hbWVudF9pZCcsIHRvdXJuYW1lbnRJZCk7XG4gICAgXG4gIGlmIChlcnJvcikgdGhyb3cgZXJyb3I7XG4gIHJldHVybiBkYXRhIHx8IFtdO1xufVxuXG4vLyBDaGVjayBpZiB1c2VyIGlzIHJlZ2lzdGVyZWQgZm9yIHRvdXJuYW1lbnRcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBpc1VzZXJSZWdpc3RlcmVkKHRvdXJuYW1lbnRJZDogc3RyaW5nLCB1c2VySWQ6IHN0cmluZykge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdwYXJ0aWNpcGFudHMnKVxuICAgIC5zZWxlY3QoJ2lkJylcbiAgICAuZXEoJ3RvdXJuYW1lbnRfaWQnLCB0b3VybmFtZW50SWQpXG4gICAgLmVxKCd1c2VyX2lkJywgdXNlcklkKVxuICAgIC5zaW5nbGUoKTtcbiAgICBcbiAgaWYgKGVycm9yICYmIGVycm9yLmNvZGUgIT09ICdQR1JTVDExNicpIHsgLy8gUEdSU1QxMTYgaXMgdGhlIFwibm8gcm93cyByZXR1cm5lZFwiIGVycm9yXG4gICAgdGhyb3cgZXJyb3I7XG4gIH1cbiAgXG4gIHJldHVybiAhIWRhdGE7XG59XG5cbi8vIENyZWF0ZSBhIHRvdXJuYW1lbnQgKGFkbWluIG9ubHkpXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY3JlYXRlVG91cm5hbWVudCh0b3VybmFtZW50RGF0YToge1xuICBuYW1lOiBzdHJpbmc7XG4gIHN0YXJ0X2RhdGU6IHN0cmluZztcbiAgZW5kX2RhdGU6IHN0cmluZztcbiAgcHJpemVfcG9vbDogbnVtYmVyO1xuICBzdGF0dXM6ICd1cGNvbWluZycgfCAnYWN0aXZlJyB8ICdjb21wbGV0ZWQnO1xuICBlbnRyeV9mZWU/OiBudW1iZXI7XG4gIG1heF9wYXJ0aWNpcGFudHM/OiBudW1iZXI7XG4gIHJlZ2lzdHJhdGlvbl9vcGVuPzogYm9vbGVhbjtcbiAgaXNfcHJpdmF0ZT86IGJvb2xlYW47XG59KSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3RvdXJuYW1lbnRzJylcbiAgICAuaW5zZXJ0KHRvdXJuYW1lbnREYXRhKVxuICAgIC5zZWxlY3QoKTtcbiAgICBcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8vIFVwZGF0ZSB0b3VybmFtZW50IHN0YXR1cyBvciBwcm9wZXJ0aWVzIChhZG1pbiBvbmx5KVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVRvdXJuYW1lbnRTdGF0dXModG91cm5hbWVudElkOiBzdHJpbmcsIHVwZGF0ZXM6IHtcbiAgc3RhdHVzPzogJ3VwY29taW5nJyB8ICdhY3RpdmUnIHwgJ2NvbXBsZXRlZCcsXG4gIHJlZ2lzdHJhdGlvbl9vcGVuPzogYm9vbGVhbixcbiAgaXNfcHJpdmF0ZT86IGJvb2xlYW4sXG4gIHByaXplX3Bvb2w/OiBudW1iZXIsXG4gIG1heF9wYXJ0aWNpcGFudHM/OiBudW1iZXIsXG4gIGVudHJ5X2ZlZT86IG51bWJlclxufSkge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCd0b3VybmFtZW50cycpXG4gICAgLnVwZGF0ZSh1cGRhdGVzKVxuICAgIC5lcSgnaWQnLCB0b3VybmFtZW50SWQpXG4gICAgLnNlbGVjdCgpO1xuICAgIFxuICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuICByZXR1cm4gZGF0YTtcbn1cblxuLy8gVXBkYXRlIHBhcnRpY2lwYW50IHN0YXR1cyAoYWRtaW4gb25seSlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB1cGRhdGVQYXJ0aWNpcGFudFN0YXR1cyhcbiAgcGFydGljaXBhbnRJZDogc3RyaW5nLCBcbiAgc3RhdHVzOiAncmVnaXN0ZXJlZCcgfCAnYWN0aXZlJyB8ICdlbGltaW5hdGVkJyB8ICd3aW5uZXInXG4pIHtcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAuZnJvbSgncGFydGljaXBhbnRzJylcbiAgICAudXBkYXRlKHsgc3RhdHVzIH0pXG4gICAgLmVxKCdpZCcsIHBhcnRpY2lwYW50SWQpXG4gICAgLnNlbGVjdCgpO1xuICAgIFxuICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuICByZXR1cm4gZGF0YTtcbn1cbiJdLCJuYW1lcyI6WyJzdXBhYmFzZSIsImdldFRvdXJuYW1lbnRzIiwiZGF0YSIsImVycm9yIiwiZnJvbSIsInNlbGVjdCIsIm9yZGVyIiwiYXNjZW5kaW5nIiwiZ2V0VG91cm5hbWVudCIsInRvdXJuYW1lbnRJZCIsImVxIiwic2luZ2xlIiwicmVnaXN0ZXJGb3JUb3VybmFtZW50IiwidXNlcklkIiwiaW5zZXJ0IiwidG91cm5hbWVudF9pZCIsInVzZXJfaWQiLCJzdGF0dXMiLCJnZXRUb3VybmFtZW50UGFydGljaXBhbnRzIiwiaXNVc2VyUmVnaXN0ZXJlZCIsImNvZGUiLCJjcmVhdGVUb3VybmFtZW50IiwidG91cm5hbWVudERhdGEiLCJ1cGRhdGVUb3VybmFtZW50U3RhdHVzIiwidXBkYXRlcyIsInVwZGF0ZSIsInVwZGF0ZVBhcnRpY2lwYW50U3RhdHVzIiwicGFydGljaXBhbnRJZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/tournaments.ts\n"));

/***/ })

});