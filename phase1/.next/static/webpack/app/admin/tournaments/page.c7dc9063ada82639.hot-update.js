"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/admin/tournaments/page",{

/***/ "(app-pages-browser)/./lib/tournaments.ts":
/*!****************************!*\
  !*** ./lib/tournaments.ts ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createTournament: function() { return /* binding */ createTournament; },\n/* harmony export */   getTournament: function() { return /* binding */ getTournament; },\n/* harmony export */   getTournamentParticipants: function() { return /* binding */ getTournamentParticipants; },\n/* harmony export */   getTournaments: function() { return /* binding */ getTournaments; },\n/* harmony export */   isUserRegistered: function() { return /* binding */ isUserRegistered; },\n/* harmony export */   registerForTournament: function() { return /* binding */ registerForTournament; },\n/* harmony export */   updateParticipantStatus: function() { return /* binding */ updateParticipantStatus; },\n/* harmony export */   updateTournamentStatus: function() { return /* binding */ updateTournamentStatus; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n\n// Get all tournaments\nasync function getTournaments() {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").select(\"*\").order(\"start_date\", {\n        ascending: true\n    });\n    if (error) throw error;\n    return data || [];\n}\n// Get a specific tournament\nasync function getTournament(tournamentId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").select(\"*\").eq(\"id\", tournamentId).single();\n    if (error) throw error;\n    return data;\n}\n// Register user for tournament\nasync function registerForTournament(tournamentId, userId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").insert({\n        tournament_id: tournamentId,\n        user_id: userId,\n        status: \"registered\"\n    }).select();\n    if (error) throw error;\n    return data;\n}\n// Get tournament participants\nasync function getTournamentParticipants(tournamentId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").select(\"\\n      id,\\n      status,\\n      registration_date,\\n      users (\\n        id,\\n        wallet_address,\\n        username,\\n        avatar_url\\n      )\\n    \").eq(\"tournament_id\", tournamentId);\n    if (error) throw error;\n    return data || [];\n}\n// Check if user is registered for tournament\nasync function isUserRegistered(tournamentId, userId) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").select(\"id\").eq(\"tournament_id\", tournamentId).eq(\"user_id\", userId).single();\n    if (error && error.code !== \"PGRST116\") {\n        throw error;\n    }\n    return !!data;\n}\n// Create a tournament (admin only)\nasync function createTournament(tournamentData) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").insert(tournamentData).select();\n    if (error) throw error;\n    return data;\n}\n// Update tournament status (admin only)\nasync function updateTournamentStatus(tournamentId, status) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"tournaments\").update({\n        status\n    }).eq(\"id\", tournamentId).select();\n    if (error) throw error;\n    return data;\n}\n// Update participant status (admin only)\nasync function updateParticipantStatus(participantId, status) {\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"participants\").update({\n        status\n    }).eq(\"id\", participantId).select();\n    if (error) throw error;\n    return data;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi90b3VybmFtZW50cy50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7QUFBc0M7QUFFdEMsc0JBQXNCO0FBQ2YsZUFBZUM7SUFDcEIsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGVBQ0xDLE1BQU0sQ0FBQyxLQUNQQyxLQUFLLENBQUMsY0FBYztRQUFFQyxXQUFXO0lBQUs7SUFFekMsSUFBSUosT0FBTyxNQUFNQTtJQUNqQixPQUFPRCxRQUFRLEVBQUU7QUFDbkI7QUFFQSw0QkFBNEI7QUFDckIsZUFBZU0sY0FBY0MsWUFBb0I7SUFDdEQsTUFBTSxFQUFFUCxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGVBQ0xDLE1BQU0sQ0FBQyxLQUNQSyxFQUFFLENBQUMsTUFBTUQsY0FDVEUsTUFBTTtJQUVULElBQUlSLE9BQU8sTUFBTUE7SUFDakIsT0FBT0Q7QUFDVDtBQUVBLCtCQUErQjtBQUN4QixlQUFlVSxzQkFBc0JILFlBQW9CLEVBQUVJLE1BQWM7SUFDOUUsTUFBTSxFQUFFWCxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGdCQUNMVSxNQUFNLENBQUM7UUFDTkMsZUFBZU47UUFDZk8sU0FBU0g7UUFDVEksUUFBUTtJQUNWLEdBQ0NaLE1BQU07SUFFVCxJQUFJRixPQUFPLE1BQU1BO0lBQ2pCLE9BQU9EO0FBQ1Q7QUFFQSw4QkFBOEI7QUFDdkIsZUFBZWdCLDBCQUEwQlQsWUFBb0I7SUFDbEUsTUFBTSxFQUFFUCxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGdCQUNMQyxNQUFNLENBQUUsbUtBV1JLLEVBQUUsQ0FBQyxpQkFBaUJEO0lBRXZCLElBQUlOLE9BQU8sTUFBTUE7SUFDakIsT0FBT0QsUUFBUSxFQUFFO0FBQ25CO0FBRUEsNkNBQTZDO0FBQ3RDLGVBQWVpQixpQkFBaUJWLFlBQW9CLEVBQUVJLE1BQWM7SUFDekUsTUFBTSxFQUFFWCxJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGdCQUNMQyxNQUFNLENBQUMsTUFDUEssRUFBRSxDQUFDLGlCQUFpQkQsY0FDcEJDLEVBQUUsQ0FBQyxXQUFXRyxRQUNkRixNQUFNO0lBRVQsSUFBSVIsU0FBU0EsTUFBTWlCLElBQUksS0FBSyxZQUFZO1FBQ3RDLE1BQU1qQjtJQUNSO0lBRUEsT0FBTyxDQUFDLENBQUNEO0FBQ1g7QUFFQSxtQ0FBbUM7QUFDNUIsZUFBZW1CLGlCQUFpQkMsY0FVdEM7SUFDQyxNQUFNLEVBQUVwQixJQUFJLEVBQUVDLEtBQUssRUFBRSxHQUFHLE1BQU1ILCtDQUFRQSxDQUNuQ0ksSUFBSSxDQUFDLGVBQ0xVLE1BQU0sQ0FBQ1EsZ0JBQ1BqQixNQUFNO0lBRVQsSUFBSUYsT0FBTyxNQUFNQTtJQUNqQixPQUFPRDtBQUNUO0FBRUEsd0NBQXdDO0FBQ2pDLGVBQWVxQix1QkFBdUJkLFlBQW9CLEVBQUVRLE1BQTJDO0lBQzVHLE1BQU0sRUFBRWYsSUFBSSxFQUFFQyxLQUFLLEVBQUUsR0FBRyxNQUFNSCwrQ0FBUUEsQ0FDbkNJLElBQUksQ0FBQyxlQUNMb0IsTUFBTSxDQUFDO1FBQUVQO0lBQU8sR0FDaEJQLEVBQUUsQ0FBQyxNQUFNRCxjQUNUSixNQUFNO0lBRVQsSUFBSUYsT0FBTyxNQUFNQTtJQUNqQixPQUFPRDtBQUNUO0FBRUEseUNBQXlDO0FBQ2xDLGVBQWV1Qix3QkFDcEJDLGFBQXFCLEVBQ3JCVCxNQUF5RDtJQUV6RCxNQUFNLEVBQUVmLElBQUksRUFBRUMsS0FBSyxFQUFFLEdBQUcsTUFBTUgsK0NBQVFBLENBQ25DSSxJQUFJLENBQUMsZ0JBQ0xvQixNQUFNLENBQUM7UUFBRVA7SUFBTyxHQUNoQlAsRUFBRSxDQUFDLE1BQU1nQixlQUNUckIsTUFBTTtJQUVULElBQUlGLE9BQU8sTUFBTUE7SUFDakIsT0FBT0Q7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvdG91cm5hbWVudHMudHM/ZGRhMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBzdXBhYmFzZSB9IGZyb20gJy4vc3VwYWJhc2UnO1xuXG4vLyBHZXQgYWxsIHRvdXJuYW1lbnRzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VG91cm5hbWVudHMoKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3RvdXJuYW1lbnRzJylcbiAgICAuc2VsZWN0KCcqJylcbiAgICAub3JkZXIoJ3N0YXJ0X2RhdGUnLCB7IGFzY2VuZGluZzogdHJ1ZSB9KTtcbiAgICBcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgcmV0dXJuIGRhdGEgfHwgW107XG59XG5cbi8vIEdldCBhIHNwZWNpZmljIHRvdXJuYW1lbnRcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRUb3VybmFtZW50KHRvdXJuYW1lbnRJZDogc3RyaW5nKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3RvdXJuYW1lbnRzJylcbiAgICAuc2VsZWN0KCcqJylcbiAgICAuZXEoJ2lkJywgdG91cm5hbWVudElkKVxuICAgIC5zaW5nbGUoKTtcbiAgICBcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8vIFJlZ2lzdGVyIHVzZXIgZm9yIHRvdXJuYW1lbnRcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZWdpc3RlckZvclRvdXJuYW1lbnQodG91cm5hbWVudElkOiBzdHJpbmcsIHVzZXJJZDogc3RyaW5nKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3BhcnRpY2lwYW50cycpXG4gICAgLmluc2VydCh7XG4gICAgICB0b3VybmFtZW50X2lkOiB0b3VybmFtZW50SWQsXG4gICAgICB1c2VyX2lkOiB1c2VySWQsXG4gICAgICBzdGF0dXM6ICdyZWdpc3RlcmVkJ1xuICAgIH0pXG4gICAgLnNlbGVjdCgpO1xuICAgIFxuICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuICByZXR1cm4gZGF0YTtcbn1cblxuLy8gR2V0IHRvdXJuYW1lbnQgcGFydGljaXBhbnRzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0VG91cm5hbWVudFBhcnRpY2lwYW50cyh0b3VybmFtZW50SWQ6IHN0cmluZykge1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgIC5mcm9tKCdwYXJ0aWNpcGFudHMnKVxuICAgIC5zZWxlY3QoYFxuICAgICAgaWQsXG4gICAgICBzdGF0dXMsXG4gICAgICByZWdpc3RyYXRpb25fZGF0ZSxcbiAgICAgIHVzZXJzIChcbiAgICAgICAgaWQsXG4gICAgICAgIHdhbGxldF9hZGRyZXNzLFxuICAgICAgICB1c2VybmFtZSxcbiAgICAgICAgYXZhdGFyX3VybFxuICAgICAgKVxuICAgIGApXG4gICAgLmVxKCd0b3VybmFtZW50X2lkJywgdG91cm5hbWVudElkKTtcbiAgICBcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgcmV0dXJuIGRhdGEgfHwgW107XG59XG5cbi8vIENoZWNrIGlmIHVzZXIgaXMgcmVnaXN0ZXJlZCBmb3IgdG91cm5hbWVudFxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGlzVXNlclJlZ2lzdGVyZWQodG91cm5hbWVudElkOiBzdHJpbmcsIHVzZXJJZDogc3RyaW5nKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3BhcnRpY2lwYW50cycpXG4gICAgLnNlbGVjdCgnaWQnKVxuICAgIC5lcSgndG91cm5hbWVudF9pZCcsIHRvdXJuYW1lbnRJZClcbiAgICAuZXEoJ3VzZXJfaWQnLCB1c2VySWQpXG4gICAgLnNpbmdsZSgpO1xuICAgIFxuICBpZiAoZXJyb3IgJiYgZXJyb3IuY29kZSAhPT0gJ1BHUlNUMTE2JykgeyAvLyBQR1JTVDExNiBpcyB0aGUgXCJubyByb3dzIHJldHVybmVkXCIgZXJyb3JcbiAgICB0aHJvdyBlcnJvcjtcbiAgfVxuICBcbiAgcmV0dXJuICEhZGF0YTtcbn1cblxuLy8gQ3JlYXRlIGEgdG91cm5hbWVudCAoYWRtaW4gb25seSlcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjcmVhdGVUb3VybmFtZW50KHRvdXJuYW1lbnREYXRhOiB7XG4gIG5hbWU6IHN0cmluZztcbiAgc3RhcnRfZGF0ZTogc3RyaW5nO1xuICBlbmRfZGF0ZTogc3RyaW5nO1xuICBwcml6ZV9wb29sOiBudW1iZXI7XG4gIHN0YXR1czogJ3VwY29taW5nJyB8ICdhY3RpdmUnIHwgJ2NvbXBsZXRlZCc7XG4gIGVudHJ5X2ZlZT86IG51bWJlcjtcbiAgbWF4X3BhcnRpY2lwYW50cz86IG51bWJlcjtcbiAgcmVnaXN0cmF0aW9uX29wZW4/OiBib29sZWFuO1xuICBpc19wcml2YXRlPzogYm9vbGVhbjtcbn0pIHtcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAuZnJvbSgndG91cm5hbWVudHMnKVxuICAgIC5pbnNlcnQodG91cm5hbWVudERhdGEpXG4gICAgLnNlbGVjdCgpO1xuICAgIFxuICBpZiAoZXJyb3IpIHRocm93IGVycm9yO1xuICByZXR1cm4gZGF0YTtcbn1cblxuLy8gVXBkYXRlIHRvdXJuYW1lbnQgc3RhdHVzIChhZG1pbiBvbmx5KVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVRvdXJuYW1lbnRTdGF0dXModG91cm5hbWVudElkOiBzdHJpbmcsIHN0YXR1czogJ3VwY29taW5nJyB8ICdhY3RpdmUnIHwgJ2NvbXBsZXRlZCcpIHtcbiAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAuZnJvbSgndG91cm5hbWVudHMnKVxuICAgIC51cGRhdGUoeyBzdGF0dXMgfSlcbiAgICAuZXEoJ2lkJywgdG91cm5hbWVudElkKVxuICAgIC5zZWxlY3QoKTtcbiAgICBcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgcmV0dXJuIGRhdGE7XG59XG5cbi8vIFVwZGF0ZSBwYXJ0aWNpcGFudCBzdGF0dXMgKGFkbWluIG9ubHkpXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdXBkYXRlUGFydGljaXBhbnRTdGF0dXMoXG4gIHBhcnRpY2lwYW50SWQ6IHN0cmluZywgXG4gIHN0YXR1czogJ3JlZ2lzdGVyZWQnIHwgJ2FjdGl2ZScgfCAnZWxpbWluYXRlZCcgfCAnd2lubmVyJ1xuKSB7XG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ3BhcnRpY2lwYW50cycpXG4gICAgLnVwZGF0ZSh7IHN0YXR1cyB9KVxuICAgIC5lcSgnaWQnLCBwYXJ0aWNpcGFudElkKVxuICAgIC5zZWxlY3QoKTtcbiAgICBcbiAgaWYgKGVycm9yKSB0aHJvdyBlcnJvcjtcbiAgcmV0dXJuIGRhdGE7XG59XG4iXSwibmFtZXMiOlsic3VwYWJhc2UiLCJnZXRUb3VybmFtZW50cyIsImRhdGEiLCJlcnJvciIsImZyb20iLCJzZWxlY3QiLCJvcmRlciIsImFzY2VuZGluZyIsImdldFRvdXJuYW1lbnQiLCJ0b3VybmFtZW50SWQiLCJlcSIsInNpbmdsZSIsInJlZ2lzdGVyRm9yVG91cm5hbWVudCIsInVzZXJJZCIsImluc2VydCIsInRvdXJuYW1lbnRfaWQiLCJ1c2VyX2lkIiwic3RhdHVzIiwiZ2V0VG91cm5hbWVudFBhcnRpY2lwYW50cyIsImlzVXNlclJlZ2lzdGVyZWQiLCJjb2RlIiwiY3JlYXRlVG91cm5hbWVudCIsInRvdXJuYW1lbnREYXRhIiwidXBkYXRlVG91cm5hbWVudFN0YXR1cyIsInVwZGF0ZSIsInVwZGF0ZVBhcnRpY2lwYW50U3RhdHVzIiwicGFydGljaXBhbnRJZCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/tournaments.ts\n"));

/***/ })

});